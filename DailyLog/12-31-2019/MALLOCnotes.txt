
/*=-==-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-=-*/
 * MALLOC TUTORIAL WITH MEMORY HISTORY 
 * LESSON AS IT PERTAINS TO SOFTWARE
 * January 1, 2019
 * by Andres Trujillo
/*=-==-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-=-*/

Out of all the callable units to further enhance your
frustrations with learning a new programming language and
making sure your up to your neck in available information 
on the web.

We discuss malloc as the central processee that will make 
your computer run as fast as possible. Imagine perfectly 
aligned memory. Perfect calls to all pointers, none dangling.
None are void per C++20 standards will dictate.

First, lets talk about RAM and mass storage and page sizes that
without these three topics and an eager Computer Scientest will
just be performance left on the table. 

RAM is fast, Mass storage is slow. Our page size is determined
by the either the Linux kernel or some equally impressive component
on the Windows machines.

RAM is our memory attribute and Best Buys Geek Squad selling point
for your next new PC. It comes in wonderful flavors and usually
is just referred to in the industry as "sticks of memory"

Ram is fast but has not had the push from investors such as CPU's,
GPU's and brand new cases or rotating LED lights. Making them 
pricey and difficult to produce at a hardware level because of 
the intricate and interweaving necesitity between the CPU and the
actual sticks themselves across the Motherboard.(ref. 1- Price of Ram)

Mass storage has most definitely had the investment and the investors
because we as a whole unified technological community that does not
fight over the better processes found on Linux or Windows. Powershell
and Xterm. History and knowledge dictate this argument to never be
over.

I have an SSD that is a quarter of the size of my old hard-drive and
is 3-6 times as fast. This in turn is connected to my SATA lanes and 
PCI-express. Which all connect to the Northbridge through the Southbridge to 
get unfettered undisturbed access to the CPU.

The Northbridge contains, the memory controller, and the implementation
there determines the type of RAM sticks used for the computer. Different
types of ram, such as DRAM, RAMBUS and SDRAM, require different memory
controllers.

The Southbridge is the Input/Output(I/O) bridge handling communication 
between the CPU and the rest of the system. These buses or lanes of 
communication that connect our devices as mentioned earlier like the 
USB also were the connection to IEEE 1394, serial and parallel ports.
(Older systems had AGP)

How do we access our RAM directly..if it isnt going to be called the
Direct Memory Access functionality by the brilliant mates in our 
community most notably the hardware techs as I will eventually speak
about the Linux malloc() function. 

DMA allows us to defer CPU clock cycles to access our RAM directly 
increasing the bandwith by all our wonderful applications through
the Northbridge creating a massive bottleneck. 

Newer RAM types require two seperate busses (or channels as they are
called for DDR2) which doubles our bandwith! The Northbridge is 
then responsible for interleaving all the DMA requests and memory 
access across the channels. FB-DRAM adds more channels.

Scheduling memory access in ways that minimize delays. CPUs are much
faster and must wait to access memory, despite having CPU caches. Having
multiple hyper-threading, cores or processors on a multi-processor system
access memory at the same time, the wait times for memory access are
even longer. Inclusive of DMA requests and allocations.

Concurrent memory patterns reduce delays by simultaneously accessing
different memory banks. This is especially true when multiple processors
are directly linked to the Northbridge.

Static Ram(Syncronyous) and Dynamic Ram
SRAM is more expensive to use and buy.
DRAM is cheaper.

